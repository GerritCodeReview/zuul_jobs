{
  "comments": [
    {
      "key": {
        "uuid": "a7421c7b_2dd68572",
        "filename": "roles/prepare-gerrit-repos/tasks/main.yaml",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-04-29T13:57:58Z",
      "side": 1,
      "message": "The error message form build plugin-manager is:\n\n - /home/zuul/src/gerrit.googlesource.com/gerrit/plugins/codemirror-editor and referenced by \u0027//plugins:core\u0027\nERROR: Analysis of target \u0027//plugins/plugin-manager:plugin_manager_tests\u0027 failed; build aborted: no such package \u0027plugins/codemirror-editor\u0027: BUILD file not found in any of the following directories.\n\nWhy is codemirror-editor is needed to run plugin-manager tests? That\u0027s why:\n\njunit_tests(\n    name \u003d \"plugin_manager_tests\",\n    srcs \u003d glob([\"src/test/java/**/*.java\"]),\n    data \u003d [\"//:release.war\"],\n    visibility \u003d [\"//visibility:public\"],\n    deps \u003d PLUGIN_TEST_DEPS + [\n        \":plugin-manager__plugin\",\n    ],\n)\n\nThis line is relevant here:\n\n      data \u003d [\"//:release.war\"],\n\nSo basically, what happens is that to run tests in this plugi we need to build release.war first. Tio build release.war we need all plugins.\n\nSo thet problem here is, that plugin-manager has unspecified dependencies. Th correct fix would be to adjust Playbook ansible script for plugin-manager and add there all cross-plugins references.",
      "revId": "bfd858d4925b631142b84ddbffdb92d8b0273431",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5824fc97_c1330d70",
        "filename": "roles/prepare-gerrit-repos/tasks/main.yaml",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-29T14:04:28Z",
      "side": 1,
      "message": "\u003e So basically, what happens is that to run tests in this plugi we need to build release.war first.\n\nYep, we do need release.war for the plugin-manager.\n\n\u003e So thet problem here is, that plugin-manager has unspecified dependencies. \n\nHow can I say in Bazel that I need the release.war?\n\n\u003e Th correct fix would be to adjust Playbook ansible script for plugin-manager and add there all cross-plugins references.\n\nI thought that Bazel is in charge to build the correct dependencies. However, the submodules need to be inizialised as I don\u0027t believe Bazel would do the submodule update by himself.\n\nIf we have to make one ansible script per plugin, then we\u0027ll end up with a bit of a mess, with hundreds of them. Is there a way to put a \"common\" template rule as we do with JJB today?",
      "parentUuid": "a7421c7b_2dd68572",
      "revId": "bfd858d4925b631142b84ddbffdb92d8b0273431",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ef2763a_be913469",
        "filename": "roles/prepare-gerrit-repos/tasks/main.yaml",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-04-29T14:16:51Z",
      "side": 1,
      "message": "\u003e How can I say in Bazel that I need the release.war?\n\nLike I did in plugin-manager BUILD file:\n\n  data \u003d [\"//:release.war\"],\n\n\u003e If we have to make one ansible script per plugin, then we\u0027ll end up with a bit of a mess, with hundreds of them.\n\nNo. We will reuse one single ansible playbook for the most plugin, while having the option to override ansible playbook if needed. What we will not do is to always clone 1000 submodules for 1000 plugins, if only one single plugin need them.\n\nSay I have 1000 plugin. 999 don\u0027t need other plugins, and should not clone 999 plugin repositories. One single plugin foo needs all other 999 plugins to build and verify itself. Clearly, there is one single place in your build infrastructure, where you have to define this dependencies: plugin foo. This is not Bazel, but the build set-up for plugin foo.",
      "parentUuid": "5824fc97_c1330d70",
      "revId": "bfd858d4925b631142b84ddbffdb92d8b0273431",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}