{
  "comments": [
    {
      "key": {
        "uuid": "ed35a023_842e1ebc",
        "filename": "playbooks/test-gerrit-base.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-02-14T06:56:44Z",
      "side": 1,
      "message": "will this also work on branches that don\u0027t have all of these submodules?",
      "range": {
        "startLine": 8,
        "startChar": 8,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c74b401_8e087efd",
        "filename": "playbooks/test-gerrit-base.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-02-14T17:18:25Z",
      "side": 1,
      "message": "This particular playbook is part of a test job that just exercises the role, and it\u0027s only set up to run on master.  But the problem you point to is general -- the setup role run by the gerrit-base job is naive and will copy all of the supplied repos into place.  Vitaliy has a good suggestion about how to avoid copying repos which aren\u0027t needed on specific branches.  We should probably implement something like that, but in the mean time, we can make branch-specific variants of the gerrit-base job which only include the necessary repos for that branch.",
      "parentUuid": "ed35a023_842e1ebc",
      "range": {
        "startLine": 8,
        "startChar": 8,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcd9826d_664a3b13",
        "filename": "playbooks/test-gerrit-base.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2020-02-17T09:35:34Z",
      "side": 1,
      "message": "If we have branch-specific variants, would it make sense to reflect the branches used in Gerrit also in zuul/jobs? So that we manage builds for Gerrit stable-2.16 in a stable-2.16 branch of zuul/jobs?",
      "parentUuid": "1c74b401_8e087efd",
      "range": {
        "startLine": 8,
        "startChar": 8,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3486aa3d_39366ffd",
        "filename": "playbooks/test-gerrit-base.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-02-17T18:46:50Z",
      "side": 1,
      "message": "We could do that, but I think it\u0027s good to have at least one repo of jobs/roles that are designed for all the projects, and not to have branches there, since most of the time it doesn\u0027t matter.  But this might point to a suggestion that we should move the base gerrit jobs into the gerrit repo itself.  Then they would automatically be branch-specific.  But I propose we continue down the path of defining these in zuul/jobs first, then consider moving them to the gerrit repo once they\u0027re stabilized (and we can see what the real cost of either choice would be).",
      "parentUuid": "fcd9826d_664a3b13",
      "range": {
        "startLine": 8,
        "startChar": 8,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b17dbc9e_447b1bf7",
        "filename": "playbooks/test-gerrit-base.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2020-02-18T08:10:11Z",
      "side": 1,
      "message": "I agree, this would definitely require more maintenance work and should only be done, if the branches strongly diverge, which I hope and am pretty confident won\u0027t happen. I was mostly curious, if this would be possible.\nMoving the gerrit job would be a possibility, but scattering the jobs over multiple repos and not having the same way of doing it for every job (e.g. keeping plugin jobs here at the same time) might be confusing as well. But as you suggested, I would also first continue with the current setup until it\u0027s stabilized and then see, whether moving the jobs to the repos of the build target would bring an advantage.",
      "parentUuid": "3486aa3d_39366ffd",
      "range": {
        "startLine": 8,
        "startChar": 8,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8edd2f2_ecdb447d",
        "filename": "playbooks/test-gerrit-base.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-02-18T15:08:17Z",
      "side": 1,
      "message": "Yes, there\u0027s an analogous situation in openstack where we have a project called devstack which sets up an openstack cloud.  What needs to be set up varies from branch to branch, and it maintains that configuration in a branched repo.  For example, here\u0027s the list of projects to set up in master[1] and an old stable branch [2]\n\n[1] https://opendev.org/openstack/devstack/src/branch/master/.zuul.yaml#L388-L441\n[2] https://opendev.org/openstack/devstack/src/branch/stable/queens/.zuul.yaml#L233-L241",
      "parentUuid": "b17dbc9e_447b1bf7",
      "range": {
        "startLine": 8,
        "startChar": 8,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d22251a4_b6bbbc68",
        "filename": "playbooks/test-gerrit-base.yaml",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-02-18T15:46:17Z",
      "side": 1,
      "message": "I wrote a change to split out the core plugins by branch[1].  I\u0027m now thoroughly convinced you are right, and we should plan on moving at least gerrit-build and gerrit-base (and maybe gerrit-plugin-build too) into the gerrit project and take advantage of the branches there.  The workflow will perfectly match how the modules are changing over time.  If we add a new submodule, we can update gitmodules and the zuul job definition at the same time.  And when we branch master for stable/X.Y, that branch will automatically have the correct zuul configuration.\n\nWe could go ahead and make that move now, or proceed with the central branch variants for a short time while we stabilize things.\n\n[1] https://gerrit-review.googlesource.com/c/zuul/jobs/+/255652",
      "parentUuid": "c8edd2f2_ecdb447d",
      "range": {
        "startLine": 8,
        "startChar": 8,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea2ba860_b5a394bd",
        "filename": "roles/prepare-gerrit-repos/tasks/repo.yaml",
        "patchSetId": 9
      },
      "lineNbr": 41,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-02-14T06:56:44Z",
      "side": 1,
      "message": "whitespace",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 4
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d841731_6f334659",
        "filename": "roles/prepare-gerrit-repos/tasks/repo.yaml",
        "patchSetId": 9
      },
      "lineNbr": 41,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-02-14T17:43:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea2ba860_b5a394bd",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 4
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f27a3b7_51355694",
        "filename": "zuul.d/jobs.yaml",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-02-14T06:56:44Z",
      "side": 1,
      "message": "same here; does this work on branches that don\u0027t have all of these submodules?",
      "range": {
        "startLine": 8,
        "startChar": 4,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a11dfc_5eaaf869",
        "filename": "zuul.d/jobs.yaml",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-02-14T17:22:13Z",
      "side": 1,
      "message": "Yeah, this is the key.  As written, this will copy all of those modules into place, which is great for master, but on stable branches we will probably end up with a surplus of modules.  The way we can fix that (prior to Vitaliy\u0027s implementation) is to make branch variants of this.  That would involve reducing the set of projects above into the set that is common across all branches, then adding something like:\n\n- job:\n    name: gerrit-base\n    branches: stable/3.0\n    required-projects:\n      - (additional projects only on 3.0 branch)\n\nBut we can defer that for a little bit -- we can get this working for master then refactor for other branches without disruption.",
      "parentUuid": "3f27a3b7_51355694",
      "range": {
        "startLine": 8,
        "startChar": 4,
        "endLine": 23,
        "endChar": 0
      },
      "revId": "de85df8b8d6427d663e90e837ec4c92784523798",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}