{
  "comments": [
    {
      "key": {
        "uuid": "1a6a272d_d82f8e4b",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T20:38:51Z",
      "side": 1,
      "message": "I could not find where you install Bazel, buildifier and Bazelisk: can you point me to the right location?",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f415dd05_a2e96aed",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-04-08T21:51:57Z",
      "side": 1,
      "message": "Sure!  Here are a couple of different ways to find that, any one would work.\n\n1) Look at the output[1] from a build and expand the second \"pre playbook\" section.  You\u0027ll see bazelisk tasks there, and they come from a different playbook[2] which is shared by all of the gerrit-related jobs (plugins and core).\n\nYou\u0027ll see a list of roles there (this is analogous to a list of JJB builders).  One of them installs bazelisk, and you can find it[3] in the roles/ directory of the same repo.\n\n2) You could find a pointer to the same pre playbook in the text job output[4].  But I prefer the console tab since it lets you drill down easier.\n\n3) You can walk up the job inheritance hierarchy[5] (put \"gerrit-build\" in the search box) and look at the job definition of each parent job to find their pre-playbooks.\n\n[1] https://ci.gerritcodereview.com/t/gerrit/build/3f33aeb878374d2bb599362bdcf3c95f/console\n[2] https://gerrit.googlesource.com/zuul/jobs/+/refs/heads/master/playbooks/gerrit-setup/pre.yaml\n[3] https://gerrit.googlesource.com/zuul/jobs/+/refs/heads/master/roles/ensure-bazelisk/\n[4] https://ci.gerritcodereview.com/t/gerrit/build/3f33aeb878374d2bb599362bdcf3c95f/log/job-output.txt#3254\n[5] https://ci.gerritcodereview.com/t/gerrit/jobs",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ace03756_952a86b2",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T22:03:14Z",
      "side": 1,
      "message": "Thanks a lot, that was useful :-)",
      "parentUuid": "f415dd05_a2e96aed",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c3706ef_e8d8db0a",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T22:03:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1a6a272d_d82f8e4b",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c380b493_3a5405ab",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T20:38:51Z",
      "side": 1,
      "message": "Not sure about the version of Maven that is getting installed. However, we do require very little Maven support in Bazel.",
      "range": {
        "startLine": 11,
        "startChar": 46,
        "endLine": 11,
        "endChar": 70
      },
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e1452d6_bf5e6e11",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-04-08T21:51:57Z",
      "side": 1,
      "message": "Maybe we should try dopping this line and see what breaks.",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6c1cab1_29ed92a2",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T22:03:14Z",
      "side": 1,
      "message": "The packaging will break (API) because it involves the generation of the pom.xml and its installation. Bazel has a target that uses Maven behind the scenes.",
      "parentUuid": "4e1452d6_bf5e6e11",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db44f261_4bf10877",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T22:03:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c380b493_3a5405ab",
      "range": {
        "startLine": 11,
        "startChar": 46,
        "endLine": 11,
        "endChar": 70
      },
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dbe8556_bf76d162",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-04-09T05:50:46Z",
      "side": 1,
      "message": "While it\u0027s true, that api.sh install and api.sh deploy are using Maven, we are not publishing Snapshots artifact on central. And we can ignore one single plugin (Github?) that is still using Maven. So that we don\u0027t need Maven tool chain at all. At least not in Zuul environment.",
      "parentUuid": "e6c1cab1_29ed92a2",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cad272c9_471b99ae",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T20:38:51Z",
      "side": 1,
      "message": "I could not find where the JDK is getting installed.\nIn our debian Docker image we have:\n  apt-get update \u0026\u0026 apt-get install -y wget software-properties-common default-jdk",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f98c17f_a9cd2035",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T20:38:51Z",
      "side": 1,
      "message": "Why not installing git from source? That is what we do today on our Docker image.\nIt will allow to switch and test with any arbitrary Git version more easily, without going fishing for a distro.",
      "range": {
        "startLine": 26,
        "startChar": 10,
        "endLine": 28,
        "endChar": 89
      },
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61cb15fa_b9a0a83a",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-04-08T21:51:57Z",
      "side": 1,
      "message": "Similar to the reponse above, it\u0027s in the same gerrit-setup pre-playbook; here\u0027s the role[1]\nThe version defaults to 8[2].  I based that on this line from the Dockerfile[3].\n\n[1] https://gerrit.googlesource.com/zuul/jobs/+/refs/heads/master/roles/ensure-java/tasks/main.yaml\n[2] https://gerrit.googlesource.com/zuul/jobs/+/refs/heads/master/roles/ensure-java/defaults/main.yaml\n[3] https://gerrit.googlesource.com/gerrit-ci-scripts/+/refs/heads/master/jenkins-docker/master/Dockerfile#107\n\nRe git: we certainly could do that.  I checked the unit tests and confirmed that the version in stretch backports (and later buster) meet the minimum version requirements so I figured this would be easier and faster (and more likely to be compatible with local development).  But if we expect to need even newer source versions of git, we can do that pretty easily.",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f93c0e56_a24533ff",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T22:03:14Z",
      "side": 1,
      "message": "Sure, we could do it in the future if needed.",
      "parentUuid": "61cb15fa_b9a0a83a",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "765fb0e2_c1c21a6a",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T22:03:14Z",
      "side": 1,
      "message": "Found it, thanks, James.",
      "parentUuid": "cad272c9_471b99ae",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e021a45d_5617b23b",
        "filename": "playbooks/gerrit/pre.yaml",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T22:03:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1f98c17f_a9cd2035",
      "range": {
        "startLine": 26,
        "startChar": 10,
        "endLine": 28,
        "endChar": 89
      },
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbc0a09f_182dc387",
        "filename": "zuul.d/jobs.yaml",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T20:38:51Z",
      "side": 1,
      "message": "We also want to make sure that the API and the Eclipse generation is healthy and working.\nYou should then run:\n\n  tools/maven/api.sh install\n  tools/eclipse/project.py --bazel bazelisk",
      "range": {
        "startLine": 45,
        "startChar": 25,
        "endLine": 45,
        "endChar": 49
      },
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "783af35b_825f25bd",
        "filename": "zuul.d/jobs.yaml",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-04-08T21:51:57Z",
      "side": 1,
      "message": "Will do.",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9c6de5d_887a4cc9",
        "filename": "zuul.d/jobs.yaml",
        "patchSetId": 15
      },
      "lineNbr": 47,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-04-08T18:57:56Z",
      "side": 1,
      "message": "What is the story behind hard coding here NOTEDB\u003dON? On stable-2.16 (that is going to be discontinued in near future) we have two different checkers: ReviewDb and NoteDb. What is the plan to pass --test_env\u003dGERRIT_NOTEDB\u003dON to NoteDb checker Job and ommit that option on ReviewDb checker job?",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 35
      },
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c43c72d0_b7a86b1b",
        "filename": "zuul.d/jobs.yaml",
        "patchSetId": 15
      },
      "lineNbr": 47,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-08T20:38:51Z",
      "side": 1,
      "message": "GERRIT_NOTEDB\u003d{ON,OFF} are two different builds on v2.16, with ReviewDb and with NoteDb.\nWe can\u0027t validate a change on stable-2.16 if any of the two is failing.\n\nYes, we are going to discontinue v2.16. But, until is officially EOL, we should keep it sane and working.",
      "parentUuid": "f9c6de5d_887a4cc9",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 35
      },
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "791967ab_c34d00d1",
        "filename": "zuul.d/jobs.yaml",
        "patchSetId": 15
      },
      "lineNbr": 47,
      "author": {
        "id": 1087826
      },
      "writtenOn": "2020-04-08T21:51:57Z",
      "side": 1,
      "message": "I\u0027ll work on a solution to run both on 2.16.",
      "revId": "87f19b84d0de28c74fca2fcd46afbdf97cad1690",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}