- name: Build Gerrit
  hosts: all
  tasks:
    - shell:
        executable: /bin/bash
        cmd: |
          set -e
          set -x

          BAZELISK_EXECUTABLE=/home/zuul/.local/bin/bazelisk

          # Begin gerrit-bazel-build.sh from:
          # https://gerrit.googlesource.com/gerrit-ci-scripts/+/refs/heads/master/jenkins/gerrit-bazel-build.sh

          cd ~/src/gerrit.googlesource.com/gerrit
          # jeblair: skip . set-java.sh 8

          export BAZEL_OPTS="$BAZEL_OPTS --spawn_strategy=standalone --genrule_strategy=standalone"

          java -fullversion
          $BAZELISK_EXECUTABLE version
          $BAZELISK_EXECUTABLE build $BAZEL_OPTS plugins:core release api

          # jeblair: "tools/maven/api.sh install" assumes bazelisk is
          # in the path; the following commands are what the script
          # would run:

          $BAZELISK_EXECUTABLE build //tools/maven:gen_api_install
          ./bazel-bin/tools/maven/api_install.sh

          # end api.sh install

          tools/eclipse/project.py --bazel $BAZELISK_EXECUTABLE

          # Begin gerrit-bazel-test.sh from:
          # https://gerrit.googlesource.com/gerrit-ci-scripts/+/refs/heads/master/jenkins/gerrit-bazel-test.sh

          cd ~/src/gerrit.googlesource.com/gerrit
          # jeblair: skip . set-java.sh 8

          export BAZEL_OPTS="$BAZEL_OPTS --spawn_strategy=standalone --genrule_strategy=standalone \
                   --test_output errors \
                   --test_summary detailed --flaky_test_attempts 3 \
                   --test_verbose_timeout_warnings --build_tests_only \
                   --test_timeout 3600 \
                   --test_tag_filters=-flaky,-docker"

          # jeblair: what is this used for?
          #                   --test_env DOCKER_HOST=$DOCKER_HOST"

          java -fullversion
          $BAZELISK_EXECUTABLE version

          # jeblair: skipping 2.16 reviewdb test for now
          # if [ "{branch}" == "stable-2.16" ]
          # then
          # echo 'Test in ReviewDb mode'
          # echo '----------------------------------------------'
          # $BAZELISK_EXECUTABLE test --test_env=GERRIT_NOTEDB=OFF $BAZEL_OPTS //...
          # fi

          echo 'Test in NoteDb mode'
          echo '----------------------------------------------'
          $BAZELISK_EXECUTABLE test --test_env=GERRIT_NOTEDB=ON $BAZEL_OPTS //...

          echo 'Test PolyGerrit locally'
          echo '----------------------------------------------'
          bash ./polygerrit-ui/app/run_test.sh || touch ~/polygerrit-failed
