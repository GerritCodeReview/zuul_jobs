- name: Run bazelisk build
  shell: |
    java -fullversion
    {{ bazelisk_executable }} version
    mkdir {{ zuul_work_dir }}/cache
    {{ bazelisk_executable }} build --java_toolchain=//tools:error_prone_warnings_toolchain {{ bazelisk_targets }} --remote_cache=https://storage.googleapis.com/bazel-cache-67e7ca4394f4 --remote_upload_local_results=false --build_event_text_file={{ zuul_output_dir }}/artifacts/bep.txt

    find ~/.gerritcodereview/bazel-cache

    #--disk_cache={{ zuul_work_dir }}/cache
    #find {{ zuul_work_dir }}/cache
    #--remote_cache=https://storage.googleapis.com/bazel-cache-67e7ca4394f4 --remote_upload_local_results=false --build_event_text_file={{ zuul_output_dir }}/artifacts/bep.txt
    # --disk_cache={{ zuul_work_dir }}/cache
    #tar cvfz {{ zuul_output_dir }}/artifacts/cache.tgz {{ zuul_work_dir }}/cache
    #ls -lh {{ zuul_output_dir }}/artifacts/cache.tgz
    #tar cvfz /tmp/artifacts/cache.tgz {{ zuul_work_dir }}/cache
    #ls -lh /tmp/artifacts/cache.tgz
  args:
    executable: /bin/bash
    chdir: "{{ zuul_work_dir }}"
- name: Run bazelisk test
  when: "bazelisk_test_targets != ''"
  shell: |
    {{ bazelisk_executable }} test --java_toolchain=//tools:error_prone_warnings_toolchain --test_output=errors --test_summary=detailed --flaky_test_attempts=3 {{ bazelisk_test_targets }}
  args:
    executable: /bin/bash
    chdir: "{{ zuul_work_dir }}"
  register: test_result
  failed_when: test_result.rc not in [0, 4]
- name: Copy output to artifacts location
  loop: "{{ bazelisk_artifacts }}"
  command: "cp {{ item }} {{ zuul_output_dir }}/artifacts"
  args:
    chdir: "{{ zuul_work_dir }}"
- name: Return built artifacts to Zuul
  loop: "{{ bazelisk_artifacts }}"
  zuul_return:
    data:
      zuul:
        artifacts:
          - name: "Build"
            url: "artifacts/{{ item | basename }}"
            metadata:
              type: java_jar
- name: Return cache to Zuul
  #when: false
  zuul_return:
    data:
      zuul:
        artifacts:
          - name: "Cache"
            url: "artifacts/cache.tgz"
            metadata:
              type: tar
